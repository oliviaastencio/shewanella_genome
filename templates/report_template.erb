<h3> GENOME ANALYSIS RESPORT </h3>

<h3> Data used in this analysis </h3>

<p> In this experiment the start set data are:
	<ul>
		<li> 	Problem genomes, that are complete genome for probiotic Shewanella.sp Pdp11 and scaffold for SdM1, SdM2, SH4, SH12, SH6, SH9 strains </li>

		<li>	16S RNA gene sequence (ab1 file) </li>
	</ul>

</p>

<h3> GENERAL DESCRIPTION </h3>
<p> This resport show all the genome analysis information that included: 
	<ul>
		<li>16S RNA identification </li>

		<li>Complete genome annotation by Dfast Tool </li>

		<li>Genome comparison with other complete shewanella genomes described on NCBI asignation by Pyani (https://github.com/widdowquinn/pyani) and Synteny blocks comparison Sibelia </li>

		<li>Tranposon identification (Tp) </li>

		<li>Genomic island identification (GIs) and enrichment analysis</li>

		<li>Genome comparison with shewanella pathogenic strains by Tarsynflow (https://github.com/seoanezonjic/TarSynFlow) </li>
	</ul>
</p>
<p>

		The taxonomy identification of problem strains as Shewanella.sp was based on Silva Taxonomy results (https://www.arb-silva.de/documentation/silva-taxonomy/). The species was identified by blastn of 16S RNA gene and the problematic strain genomes comparison with 120 complete genomes described on NCBI database. The complete genome of Shewanella.sp Pdp11 and partial genome of pathogenic and saprofit strains of shewanella were annotated using Dfast tool, by Clusters of Orthologous Groups (COG) and the number of genes asociated to categories were determinated. 
		The transposons has been detected by ISEScan tool (https://github.com/xiezhq/ISEScan) which was complemented with tp_finder workflow for transposase and disrupt protein identification. The genomic islands were identify using IslandViewer 4 software and the GI enrichment analyzed by DEgenes Hunter (https://github.com/seoanezonjic/ExpHunterSuite) , by API option. The genome comparison of  Shewanella.sp Pdp11 and pathogenic strains allow us to identified the specific genes of pathogenic strains and their absent in probiotic. 
</p>


<h3> 16S RNA </h3>
<p> The Table indicated the 16S RNA analysis of problem genomes was carry out by blatn. The top 10 for each strain with high identity and coverage value.  </p>
<%=
	table(id: 'blast_16', text: true, header: true, row_names: false, styled: 'dt', attrib: {'class' => 'table'}) do |table|
		table.unshift(['Ref', 'strain', 'identity', 'coverage'])
	end
%>
<h3> Identity and coverage of complete genome comparison </h3>
<p> Heatmap represent a nucleotide identity (ANI) of 0 to 1 value, between our 8 strains studies and 129 complete genomes of Shewanella genus available at NCBI. The probiotic Shewanella Pdp11 had high similarity to Shewanella baltica genus. </p>
<div style="overflow: hidden">

<%=
	heatmap(id: 'pyani_identity', transpose:false, header: true, row_names: true, x_label: 'ANI',  title: "Shewanella genomes identity", height: 600, config:{
			'variablesClustered' => true,
	}) do |table|
		to_delete = []
		table.each_with_index do |row, i|
			if i > 0
				max = row[1..-1].max
				to_delete << i if max < 0.9
			end
		end
		to_delete.reverse_each do |idx|
			table.delete_at(idx)
		end
	end 
%>
</div>


<p> Heatmap represent of 0 to 1 coverage value, between our 8 strains studies and 129 complete genomes of Shewanella genus available at NCBI. The probiotic Shewanella Pdp11 had high similarity to Shewanella baltica genus. </p>
<div style="overflow: hidden">

<%=
	heatmap(id: 'pyani_coverage', transpose:false, header: true, row_names: true, x_label: 'coverage',  title: "Shewanella genomes coverage", height: 600,  config:{
			'variablesClustered' => true,
	}) do |table|
		to_delete = []
		table.each_with_index do |row, i|
			if i > 0
				max = row[1..-1].max
				to_delete << i if max < 0.8
			end
		end
		to_delete.reverse_each do |idx|
			table.delete_at(idx)
		end
	end 
%>
</div>

<h3> Sybelia results </h3>
<%=
	embed_img('results/S_baltica_128:Pdp11.png', 'width="600" height="600"')
%>
<%=
	embed_img('results/S_putrefaciens_4H:Pdp11.png', 'width="600" height="600"')
%>

<h3> COG annotation </h3>

<p> The Figure represent the annotation by Dfast of the 137 research strains of Shewanella.sp.  </p>
<div style="overflow: hidden">

<%=
	heatmap(id: 'COG_annotation', transpose:true, header: true, row_names: true, x_label: 'genes',  title: "COG categories", height: 400, config:{
			'variablesClustered' => true,
	}) do |table|
		to_delete = []
		table.each_with_index do |row, i|
			if i > 0
				max = row[1..-1].max
				to_delete << i if max < 100
			end
		end
		to_delete.reverse_each do |idx|
			table.delete_at(idx)
		end
	end 
%>

</div>

<p> The Figure represent the % of CDS annotated with COG by Dfast of the 137 research strains of Shewanella.sp. </p>
<div style="overflow: hidden">

<%=
	heatmap(id: 'COG_annotation_relative', transpose:true, header: true, row_names: true, x_label: 'genes (%)',  title: "COG categories relative", height: 400, config:{
			'variablesClustered' => true,
	}) do |table|
		to_delete = []
		table.each_with_index do |row, i|
			if i > 0
				max = row[1..-1].max
				to_delete << i if max < 2
			end
		end
		to_delete.reverse_each do |idx|
			table.delete_at(idx)
		end
	end 
%>
</div>

<p> Figure show percentage of CoDing Sequence (CDS) which assignment COG annotation by DFAST, for each Shewanella genome analyzed </p>

<div style="overflow: hidden">

<%=barplot(id: 'COG_percent', header: true, row_names: true, x_label: 'COG/CDS', title: "CDS with COG annotation", height: 400, config:{
			'samplesClustered' => true,
	})

%>
</div>

<h3> Transposon identification  </h3>
<p> Transposons elements were identified at 101 genome of 137 Shewanella.sp genomes analysis </p>

<div style="overflow: hidden">

<%=barplot(id: 'Total_absolute', header: true, row_names: true, x_label: 'Tp number', title: "Transposable elements", height: 400, config:{
			'samplesClustered' => true, theme: "blue"
	})

%>
</div>


<p> Relative number of transposable elements respect to CDS number for each Shewanella strain </p>

<div style="overflow: hidden">

<%=barplot(id: 'Total_relative', header: true, row_names: true, x_label: 'Tp/CDS (%)', title: "Transposable elements relative to CDS", height: 400, config:{
			'samplesClustered' => true,
	})

%>
</div>

<h3> Transposon identification </h3>
<p> The Table evidence the transposons identified in Shewanella.sp Pdp11 genome and the disrupted proteina by transposase. </p>
<div style="overflow: hidden">
<%=
	table(id: 'Pdp11_tp', text: true, header: true, row_names: false, styled: 'dt', attrib: {'class' => 'table'}) do |table|
		table.unshift(['genome coordinate', 'start tpfinder', 'end tpfinder', 'transposase protein', 'disrupt protein'])
	end
%>

</div>


<p> The heatmap show a matrix of absent (0) and present (1) of dysrupted protein for each Shewanella strain </p>
<div style="overflow: hidden">

<%=
	heatmap(id: 'Tp_interrupt', transpose:true, header: true, row_names: true, x_label: 'absent/present',  title: "Interrupted protein by Tp", height: 600, config:{
			'variablesClustered' => true, 'samplesClustered' => true,
	}) do |table|
		to_delete = []
		table.each_with_index do |row, i|
			if i > 0
				max = row[2..-2].max
				to_delete << i if max < 1
			end
		end
		to_delete.reverse_each do |idx|
			table.delete_at(idx)
		
		end
	end 
%>

</div>


<p> The heatmap show a matrix of absent (0) and present (1) of tranposable protein for each Shewanella strain </p>
<div style="overflow: hidden">

<%=
	heatmap(id: 'Tp_transposable', transpose:true, header: true, row_names: true, x_label: 'absent/present',  title: "Transposable protein", height: 600, config:{
			'variablesClustered' => true, 'samplesClustered' => true,
	}) do |table|
		to_delete = []
		table.each_with_index do |row, i|
			if i > 0
				max = row[2..-2].max
				to_delete << i if max < 1
			end
		end
		to_delete.reverse_each do |idx|
			table.delete_at(idx)
		end
	end 
%>
</div>

<h3> Genomic Island  </h3>
<p> The Mobilome analysis included the genomic island identification. Figure represente the total of GIs identified at 137 research strains of Shewanella.sp. </p>

<div style="overflow: hidden">

<%=barplot(id: 'GI_total', header: true, row_names: true, x_label: 'GIs', y_label: 'strains', title: "Genomic islands (GIs)", height: 400, config:{
			'samplesClustered' => true,
	}) 
%>
</div>


<p> The Figure shows the number of genomic islands in which some functional categories are significant, determined by Dfast. The GIs were identified in 137 research strains of Shewanella.sp. </p>
<div style="overflow: hidden">

<%=
	heatmap(id: 'enrichment_GI_cat', transpose:true, header: true, row_names: true, x_label: 'GIs number',  title: "categories functional of GI", height: 600, config:{
			'variablesClustered' => true,
	}) do |table|
		to_delete = []
		table.each_with_index do |row, i|
			if i > 0
				max = row[1..-1].max
				to_delete << i if max < 0.1
			end
		end
		to_delete.reverse_each do |idx|
			table.delete_at(idx)
		end
	end 
%>
</div>


<p> The Figure shows the number of genomic islands in which some functional categories are significant relative to the total number of genomic islands in each genome, determined by Dfast. The GIs were identified in 137 research strains of Shewanella.sp. </p>
<div style="overflow: hidden">

<%=
	heatmap(id: 'enrichment_GI_cat_relative', transpose:true, header: true, row_names: true, x_label: 'GIs number/total GIs (%)',  title: "categories functional of GI relative", height: 600, config:{
			'variablesClustered' => true,
	}) do |table|
		to_delete = []
		table.each_with_index do |row, i|
			if i > 0
				max = row[1..-1].max
				to_delete << i if max < 0.1
			end
		end
		to_delete.reverse_each do |idx|
			table.delete_at(idx)
		end
	end 
%>
</div>

<h3> Probiotic and pathogenic strains comparison </h3>
<p> This analysis were focused on pathogenic and probiotic strains comparison by Tarsynflow, which identified the specific genes on pathogenic and their absent on probiotic strain. </p>
<%=
	table(id: 'specific_genes', text: true, header: true, row_names: false, styled: 'dt', attrib: {'class' => 'table'}) do |table|
		table.unshift(['Entry', 'protein names', 'organism'])
	end
%>
