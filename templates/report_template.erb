<div style="width:90%; background-color:#ecf0f1; margin:0 auto;">
    <h1 style="text-align:center; background-color:#d6eaf8 ">GENOME ANALYSIS REPORT</h1>

<h3> <b> Data used in this analysis </b> </h3>

<p> In this experiment, the start set data are:
	<ul>
		<li> 	Problem genomes, that are complete genome for probiotic <em>Shewanella</em> sp. Pdp11 and scaffold for SdM1, SdM2, SH4, SH12, SH6, SH9 strains </li>

		<li>	16S RNA gene sequence (ab1 file) </li>
	</ul>

</p>

<h3> <b> GENERAL DESCRIPTION </b> </h3>
<p> This report shows all the genome analysis information including:
	<ul>
		<li> 16S RNA identification </li>

		<li> Complete genome annotation by Dfast Tool </li>

		<li> Genome comparison with other complete <em>Shewanella</em> genomes described on NCBI assignation by Pyani (https://github.com/widdowquinn/pyani) and Synteny blocks comparison Sibelia </li>

		<li> Transposon identification (Tp) </li>

		<li> Genomic island identification (GIs) and enrichment analysis </li>

		<li> Genome comparison with shewanella pathogenic strains by Tarsynflow (https://github.com/seoanezonjic/TarSynFlow) </li>
	</ul>
</p>
<p>
	The taxonomy identification of problematic strains as belonging to the <em>Shewanella</em> genus was based on Silva Taxonomy results (https://www.arb-silva.de/documentation/silva-taxonomy/). Species identification was performed using blastn of the 16S rRNA gene and by comparing the genomes of problematic strains against 128 complete genomes available in the NCBI database.

	The complete genome of <em>Shewanella</em> sp. Pdp11 and the partial genomes of pathogenic and saprophytic <em>Shewanella</em> strains were annotated using the DFAST tool. Functional annotation was performed based on Clusters of Orthologous Groups (COG), and the number of genes associated with each category was determined.

	Transposons were detected using the ISEScan tool (https://github.com/xiezhq/ISEScan), complemented by the tp_finder workflow for the identification of transposases and disrupted proteins. Genomic islands and Prophage were identified using IslandViewer 4 and Virsorter (https://github.com/jiarong/VirSorter2), respectively, and the GI enrichment was analyzed using DEgenes Hunter (https://github.com/seoanezonjic/ExpHunterSuite).

	Comparative genome analysis between <em>Shewanella</em>sp. Pdp11 and pathogenic strains allowed the identification of specific genes present in pathogenic strains but absent in the probiotic strain.
</p>
</div>

<div style="width:90%; background-color:#ffe9ea; margin:0 auto;">
    <h1 style="text-align:center; background-color:#ffc2c5 "> <em>Shewanella</em> species assignation </h1>

<h3> <b> 16S RNA </b> </h3>
<p> The Table indicated the 16S RNA analysis of problem genomes was carried out by blatn. The top 10 for each strain with high identity and coverage value.  </p>
<%=
	table(id: 'blast_16', text: true, header: true, row_names: false, styled: 'dt', attrib: {'class' => 'table'}) do |table|
		table.unshift(['strain', 'identity', 'coverage', 'NCBI strain' ])
	end
%>
<h3> <b> Complete genome comparison </b> </h3>

<h3> <b> Pyani </b> </h3>
<p> Heatmaps represent the calculation of Average Nucleotide Identity (ANI) using MUMmer (NUCmer) to align the input sequences. The results provide the specific nucleotide identity (first heatmap) and coverage (second heatmap), both ranging from 0 to 1, between our eight studied strains and 128 complete genomes of the <em>Shewanella</em> genus available in NCBI. The probiotic <em>Shewanella</em> Pdp11 showed high identity and coverage with <em>Shewanella</em> baltica, while SH4 and SH12 were closely related to <em>Shewanella</em> xiamenensis. In contrast, SH6, SH16, SH9, and SdM1 exhibited similarity to <em>Shewanella</em> oncorhynchi.
<div style="overflow: hidden">

<%=
	heatmap(id: 'pyani_matrix_identity', transpose:false, header: true, row_names: true, x_label: 'ANIm',  title: "Identity", height: 600, config:{
			'variablesClustered' => true, 'varLabelRotate'=> 45, 'smpLabelScaleFontFactor' => 1, 'varLabelScaleFontFactor' => 1, 
	}) do |table|
		to_delete = []
		table.each_with_index do |row, i|
			if i > 0
				max = row[1..-1].max
				to_delete << i if max < 0.9
			end
		end
		to_delete.reverse_each do |idx|
			table.delete_at(idx)
		end
	end 
%>

<%=
	heatmap(id: 'pyani_matrix_coverage', transpose:false, header: true, row_names: true, x_label: 'ANIm',  title: "Coverage", height: 600,  config:{
			'variablesClustered' => true, 'varLabelRotate'=> 45, 'smpLabelScaleFontFactor' => 1, 'varLabelScaleFontFactor' => 1, 
	}) do |table|
		to_delete = []
		table.each_with_index do |row, i|
			if i > 0
				max = row[1..-1].max
				to_delete << i if max < 0.8
			end
		end
		to_delete.reverse_each do |idx|
			table.delete_at(idx)
		end
	end 
%>
</div>

<div style="overflow: hidden">
<h3> <b> Sybelia results </b> </h3>

<p> The figures represent the synteny blocks of our studies strains and those with the highest identity. </p>

<h3> <b> Custom comparisons </b> </h3>

<p> <b> Synteny blocks of Pdp11 custom comparisons with <em>Shewanella putrefaciens</em> ATCC 8071 (left) and <em>Shewanella baltica</em> OS678 (right), described as reference genomes </b> </p>
<%=
	embed_img('results/report_img/Pdp11_Shewanella_putrefaciens_ATCC_8071.png', 'width="600" height="600"')
%>
<%=
	embed_img('results/report_img/Pdp11_Shewanella_baltica_OS678_OS678.png', 'width="600" height="600"')
%>

<h3> <b> Best genome match comparisons </b> </h3>

<p> <b> Synteny blocks among our studied strains and their best match by Pyani, including Pdp11 compared with uncultured <em>Shewanella</em> (left), SdM1 with <em>Shewanella sp.</em> WE21 (center), and SdM2 with <em>Shewanella putrefaciens</em> YZ-J (right) </b> </p>


<%=
	embed_img('results/report_img/Pdp11_uncultured_Shewanella_sp.png', 'width="400" height="400"')
%>

<%=
	embed_img('results/report_img/SdM1_Shewanella_sp._WE21_WE21.png', 'width="400" height="400"')
%>

<%=
	embed_img('results/report_img/SdM2_Shewanella_putrefaciens_YZ-J.png', 'width="400" height="400"')
%>

<p> <b> Additionally, SH12 (left) and SH4 (right) matched with <em>Shewanella</em> xiamenensis 8M38 </b> </p>

<%=
	embed_img('results/report_img/SH12_Shewanella_xiamenensis_8M38.png', 'width="600" height="600"')
%>

<%=
	embed_img('results/report_img/SH4_Shewanella_xiamenensis_8M38.png', 'width="600" height="600"')
%>

<p> <b> SH9  (left), SH6 (center) and SH16 (right) matched with <em>Shewanella</em> oncorhynchi B </b> </p>
<%=
	embed_img('results/report_img/SH6_Shewanella_oncorhynchi_B.png', 'width="400" height="400"')
%>

<%=
	embed_img('results/report_img/SH9_Shewanella_oncorhynchi_B.png', 'width="400" height="400"')
%>

<%=
	embed_img('results/report_img/SH16_Shewanella_oncorhynchi_B.png', 'width="400" height="400"')
%>

</div>
</div>

<div style="width:90%; background-color:#ffffd8; margin:0 auto;">
    <h1 style="text-align:center; background-color:#ffffab">Genome annotation</h1>

<p> The DFAST tool (https://dfast.ddbj.nig.ac.jp/) was used for the COG annotation of 136 complete genomes. The heatmaps represent the number of genes associated with each COG functional category (left heatmap) and the standardized number of genes relative to the total number of coding sequences (CDS) in each genome, expressed as a percentage (gene %) (right heatmap). </p>
<div style="overflow: hidden">

<%=
	heatmap(id: 'report_Total_cog_table', transpose:true, header: true, var_attr:[1], row_names: true, x_label: 'genes',  title: "Genome annotation", width: 600, height: 400, config:{
		'variablesClustered' => false,
		'varLabelRotate'=> 45,
		'smpLabelScaleFontFactor' => 1, 
		'varLabelScaleFontFactor' => 1, 
		'varOverlays' => ["strains"],
		'sortData' => [["cat", "var", "strains"]]
	}) 
%>

<%=
	heatmap(id: 'report_Total_cog_table_relative', transpose:true, header: true,var_attr:[1], row_names: true, x_label: 'genes %',  title: "Genome annotation", width: 600, height: 400, config:{
		'variablesClustered' => false,
		'varLabelRotate'=> 45, 
		'smpLabelScaleFontFactor' => 1, 
		'varLabelScaleFontFactor' => 1, 
		'varOverlays' => ["strains"],
		'sortData' => [["cat", "var", "strains"]]
	}) do |table|

  num_cols = table[0].size
  to_delete_cols = []

  (1...num_cols).each do |col_idx|  
    values = table[1..-1].map do |row|
      begin
        Float(row[col_idx])
      rescue
        nil
      end
    end.compact

    next if values.empty?  
    mean = values.sum / values.size

    to_delete_cols << col_idx if mean < 1
  end

  to_delete_cols.reverse_each do |col_idx|
    table.each { |row| row.delete_at(col_idx) }
  end
end

%>

</div>
</div>

<div style="width:90%; background-color:#e9f9e9; margin:0 auto;">
    <h1 style="text-align:center; background-color:#bbecbb"> Transposon </h1>

<p> The transposable elements (TEs) analized was performed using a custom workflow with ISEScan (https://github.com/xiezhq/ISEScan) and Tp finder. The results include the number of TEs identified in each genome (left bar plot), the standardized number of TEs relative to the number of coding sequences (CDS) (right bar plot), and the repeated TEs within each genome (Table). Additionally, the presence or absence of disrupted proteins (left heatmap) and transposases (right heatmap) in each genome was determined and represented by a binary matrix (0 and 1). The analysis identified the presence of TEs in 101 strains (more than 70% of the strains of this genus). </p>

<div style="overflow: hidden">

<%=barplot(id: 'report_Tp_absolute', header: true, smp_attr:[1], row_names: true, x_label: 'Transposable elements', title: "TEs elements", height: 400, config:{
			'samplesClustered' => false,
			'smpOverlays' => ["strains"],
			'colorBy' => " strains"
		}) 

%>


<%=barplot(id: 'report_Tp_relative', header: true, smp_attr:[1], row_names: true, x_label: 'Transposable elements (%)', title: "TEs elements", height: 400, config:{
			'samplesClustered' => false,
			'smpOverlays' => ["strains"],
			'colorBy' => " strains"
		}) 
%> 


<%=
	table(id: 'Tp_Pdp11', text: true, header: true, row_names: false, styled: 'dt', attrib: {'class' => 'table'}) do |table|
		table.unshift(['genome coordinate', 'start tpfinder', 'end tpfinder', 'transposase protein', 'disrupt protein'])
	end
%>

<%=
	heatmap(id: 'report_Tp_interrupt', transpose: true, header: true, var_attr:[1], row_names: true, x_label: 'number',  title: "Interrupted protein", height: 600, config:{
			'samplesClustered' => false,
			'varLabelRotate'=> 45, 
			'smpLabelScaleFontFactor' => 1, 
			'varLabelScaleFontFactor' => 1, 
			'varOverlays' => ["strains"],
			'sortData' => [["cat", "var", "strains"]]
	}) do |table|

  to_delete = []
  table.each_with_index do |row, i|
    if i > 0
      max = row[1..-1].max
      to_delete << i if max < 0.9
    end
  end
  to_delete.reverse_each { |idx| table.delete_at(idx) }

  col_to_delete = []
  (1...table[0].size).each do |col_idx|  
    all_zeros = table[1..-1].all? { |row| row[col_idx] == 0 }
    col_to_delete << col_idx if all_zeros
  end

  table.each { |row| col_to_delete.reverse_each { |col_idx| row.delete_at(col_idx) } }
end

%>

<%=
	heatmap(id: 'report_Tp_transposase', transpose: true, header: true, var_attr:[1], row_names: true, x_label: 'number',  title: "Transposable protein", height: 600, config:{
		'samplesClustered' => false,
		'varLabelRotate'=> 45, 
		'smpLabelScaleFontFactor' => 1, 
		'varLabelScaleFontFactor' => 1, 
		'varOverlays' => ["strains"],
		'sortData' => [["cat", "var", "strains"]]
	}) 
%>
</div>
</div>

<div style="width:90%; background-color:#ffe9ea; margin:0 auto;">
    <h1 style="text-align:center; background-color:#ffc2c5 "> Genomic Island </h1>

<p> The mobilome analysis included the identification of genomic islands (GIs) using IslandViewer4 (https://www.pathogenomics.sfu.ca/islandviewer/). The results show the total number of GIs identified in 134 research strains of <em>Shewanella</em> sp. The figure illustrates the number of genomic islands in which certain functional categories, determined by DFAST, are significant. Additionally, functional enrichment of GIs was performed using the ExpHunterSuite script clusters_to_enrichment.R, which is based on the clusterProfiler package, with an FDR threshold of 0.05 (-p 0.05). The heatmap represents the number of GIs assigned to COG categories (left) and this number standardized to the total GIs (GI %) (right).


<div style="overflow: hidden">

<%=barplot(id: 'report_Total_GI', header: true, smp_attr:[1], row_names: true, x_label: 'GIs', y_label: 'strains', title: "Genomic islands (GIs)", height: 400, config:{
			'samplesClustered' => false,
			'smpOverlays' => ["strains"],
			'colorBy' => " strains"
		}) 
%>

<%=barplot(id: 'report_Total_GI_relative', header: true, smp_attr:[1], row_names: true, x_label: 'GIs (%)', y_label: 'strains', title: "Genomic islands (GIs)", height: 400, config:{
			'samplesClustered' => false,
			'smpOverlays' => ["strains"],
			'colorBy' => " strains"
		}) 
%>
</div>
</div>

<div style="overflow: hidden">
<%=
	heatmap(id: 'report_enrichment_GI_category', transpose:true, header: true, var_attr:[1], row_names: true, x_label: 'GI number',  title: "Functional enrichment", width: 600, height: 400, config:{
			'variablesClustered' => true,
			'varOverlays' => ["strains"],
			'varLabelRotate'=> 45, 
			'smpLabelScaleFontFactor' => 1, 
			'varLabelScaleFontFactor' => 1, 
			'sortData' => [["cat", "var", "strains"]]
		}) 
%>

<%=
	heatmap(id: 'report_enrichment_GI_category_relative', transpose:true, header: true, var_attr:[1], row_names: true, x_label: 'GIs (%)',  title: "Functional enrichment", width: 600, height: 400, config:{
			'variablesClustered' => true,
			'varLabelRotate'=> 45, 
			'smpLabelScaleFontFactor' => 1, 
			'varLabelScaleFontFactor' => 1, 
			'varOverlays' => ["strains"],
			'sortData' => [["cat", "var", "strains"]]
		}) do |table|

  num_cols = table[0].size
  to_delete_cols = []

  (1...num_cols).each do |col_idx|  
    values = table[1..-1].map do |row|
      begin
        Float(row[col_idx])
      rescue
        nil
      end
    end.compact

    next if values.empty?  
    mean = values.sum / values.size

    to_delete_cols << col_idx if mean < 5
  end

  to_delete_cols.reverse_each do |col_idx|
    table.each { |row| row.delete_at(col_idx) }
  end
end

%>

</div>
</div>

<div style="width:90%; background-color:#ffffd8; margin:0 auto;">
    <h1 style="text-align:center; background-color:#ffffab"> Prophage </h1>

<p> Prophage was analized using Virsorter (https://github.com/jiarong/VirSorter2). Prophages were identified in 77 complete genomes of <em>Shewanella</em> </p>

<div style="overflow: hidden">

<%=barplot(id: 'report_Total_phage', header: true, smp_attr:[1], row_names: true, x_label: 'prophage' , title: "Prophage", height: 400, config:{
			'samplesClustered' => false,
			'smpOverlays' => ["strains"],
			'colorBy' => " strains"
		})

%>
<%=barplot(id: 'report_Total_phage_relative', header: true, smp_attr:[1], row_names: true, x_label: 'prophage (%)' , title: "Prophage", height: 400, config:{
			'samplesClustered' => false,
			'smpOverlays' => ["strains"],
			'colorBy' => " strains"
		})

%>
</div>
</div>

<div style="width:90%; background-color:#e9f9e9; margin:0 auto;">
    <h1 style="text-align:center; background-color:#bbecbb"> Probiotic and pathogenic strains comparison </h1>
<p> This analysis were focused on pathogenic and probiotic strains comparison by Tarsynflow, which identified the specific genes on pathogenic and their absent on probiotic strain. </p>
<%=
	table(id: 'specific_genes', text: true, header: true, row_names: false, styled: 'dt', attrib: {'class' => 'table'}) do |table|
		table.unshift(['Entry', 'protein names', 'organism'])
	end
%>
</div>
</div>

